{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var fs = require('fs'),\n  path = require('path'),\n  mkdirp = require('mkdirp'),\n  _savefs = savefs,\n  savefs = {};\n\nmodule.exports = function(file, opts) {\n\n  dir_name= path.dirname(file)\n  // origin file path\n  ori_path = path.resolve(file);\n  // folder path\n  dir_path = path.resolve(dir_name);\n\n  savefs._create_dir(dir_path, opts)\n  \n  return savefs.wstream(ori_path)\n}\n\nsavefs._create_dir = function (fp, opts) {\n  mkdirp.sync(fp, opts);\n}\n\nsavefs.wstream = function (file) {\n  var ws = fs.createWriteStream(file);\n  this.writer = ws;\n  return this;\n}\n\n// chaining write method\nsavefs.write = function(chunk, encoding, cb) {\n  if(arguments.length === 3) {\n    this.writer.write(chunk, encoding, cb);\n  }else if(arguments.length === 2 && typeof arguments[1] === 'function') {\n    cb = encoding;\n    encoding = null;\n    this.writer.write(chunk, cb);\n  }else if(arguments.length === 2 && typeof arguments[1] !== 'function') {\n    this.writer.write(chunk, encoding)\n  }else {\n    this.writer.write(chunk)\n  }\n\n  return this;\n}\n\n// chaining end method\nsavefs.end = function(chunk, encoding, cb) {\n  if(arguments.length === 3) {\n    this.writer.end(chunk, encoding, cb);\n  }else if(arguments.length === 2 && typeof arguments[1] === 'function') {\n    cb = encoding;\n    encoding = null;\n    this.writer.end(chunk, cb);\n  }else if(arguments.length === 2 && typeof arguments[1] !== 'function') {\n    this.writer.end(chunk, encoding)\n  }else {\n    this.writer.end(chunk)\n  }\n\n  return this;\n}\n\nsavefs.finish = function(cb) {\n  this.writer.on('finish', cb);\n}\n\nsavefs.error = function(cb) {\n  this.writer.on('error', cb);\n} "]}