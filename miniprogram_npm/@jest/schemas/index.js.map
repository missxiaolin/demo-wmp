{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.SnapshotFormat = void 0;\nfunction _typebox() {\n  const data = require('@sinclair/typebox');\n  _typebox = function () {\n    return data;\n  };\n  return data;\n}\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst RawSnapshotFormat = _typebox().Type.Partial(\n  _typebox().Type.Object({\n    callToJSON: _typebox().Type.Readonly(_typebox().Type.Boolean()),\n    compareKeys: _typebox().Type.Readonly(_typebox().Type.Null()),\n    escapeRegex: _typebox().Type.Readonly(_typebox().Type.Boolean()),\n    escapeString: _typebox().Type.Readonly(_typebox().Type.Boolean()),\n    highlight: _typebox().Type.Readonly(_typebox().Type.Boolean()),\n    indent: _typebox().Type.Readonly(\n      _typebox().Type.Number({\n        minimum: 0\n      })\n    ),\n    maxDepth: _typebox().Type.Readonly(\n      _typebox().Type.Number({\n        minimum: 0\n      })\n    ),\n    maxWidth: _typebox().Type.Readonly(\n      _typebox().Type.Number({\n        minimum: 0\n      })\n    ),\n    min: _typebox().Type.Readonly(_typebox().Type.Boolean()),\n    printBasicPrototype: _typebox().Type.Readonly(_typebox().Type.Boolean()),\n    printFunctionName: _typebox().Type.Readonly(_typebox().Type.Boolean()),\n    theme: _typebox().Type.Readonly(\n      _typebox().Type.Partial(\n        _typebox().Type.Object({\n          comment: _typebox().Type.Readonly(_typebox().Type.String()),\n          content: _typebox().Type.Readonly(_typebox().Type.String()),\n          prop: _typebox().Type.Readonly(_typebox().Type.String()),\n          tag: _typebox().Type.Readonly(_typebox().Type.String()),\n          value: _typebox().Type.Readonly(_typebox().Type.String())\n        })\n      )\n    )\n  })\n);\nconst SnapshotFormat = _typebox().Type.Strict(RawSnapshotFormat);\nexports.SnapshotFormat = SnapshotFormat;\n"]}